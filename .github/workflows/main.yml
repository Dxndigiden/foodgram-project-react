name: Main Foodgram workflow

on: push

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.10
        env:
          POSTGRES_USER: foodgram_user
          POSTGRES_PASSWORD: foodgram_password
          DB_NAME: foodgram
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install flake8==6.0.0
        pip install -r ./backend/requirements.txt 
    - name: Test with flake8 and django tests
      env:
        POSTGRES_USER: foodgram_user
        POSTGRES_PASSWORD: foodgram_password
        DB_NAME: foodgram
        DB_HOST: 127.0.0.1
        DB_PORT: 5432
      run: |
        python -m flake8 backend/
        cd backend/
        

  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push backend to DockerHub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: backend/
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
      - name: Push frontend to DockerHub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: frontend/
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: 
      - build_and_push_to_docker_hub
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          cd foodgram
          sudo docker compose stop backend
          sudo docker compose rm -f backend
          sudo docker image prune -af
          sudo docker compose -f docker-compose.yml down
          sudo docker compose up -d
          sudo docker compose exec -T backend python manage.py makemigrations users
          sudo docker compose exec -T backend python manage.py makemigrations recipes
          sudo docker compose exec -T backend python manage.py migrate
          sudo docker compose exec -T backend python manage.py collectstatic --noinput
          sudo docker compose exec -T backend python manage.py loaddata ingredients.json
          sudo docker compose -f exec -T backend python manage.py ingredients_load

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: Деплой ${{ github.workflow }}  успешно выполнен!